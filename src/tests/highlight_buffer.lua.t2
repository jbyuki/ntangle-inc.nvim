;;; ../ntangle-inc
;; attach parser if treesitter highlighter exists
if lang then
	-- ; look for lls attached to hl

	; check that parser is installed

	if parser_installed then
		vim.treesitter.get_parser(buf, lang)
		-- for _, highlighter in pairs(vim.treesitter.highlighter.active) do
			-- local ll = lls[highlighter.bufnr]
			-- if ll and attached_lls[ll] and not highlighter.trees[buf] then
				-- highlighter.trees[buf] = vim.treesitter.get_parser(buf, lang)
			-- end
		-- end
	end
end

;; look for lls attached to hl
local attached_lls = {}
for _ll, _hl in pairs(ll_to_hl) do
	if _hl == hl then
		attached_lls[_ll] = true
	end
end

;; start treesitter highlighter
vim.treesitter.highlighter.new(ev.buf, {})

;; check that parser is installed
local found, parsers = pcall(require, "nvim-treesitter.parsers")
local parser_installed = false
if found then
	parser_installed = parsers.has_parser(lang)
end


;; start highlight buffer
local hl = M.ll_to_hl[ll]
if hl then
	for _, highlighter in pairs(vim.treesitter.highlighter.active) do
		if buf == highlighter.bufnr then
			local mirror_bufs = {}
			local langs = {}

			for _buf, _hl in pairs(M.buf_to_hl) do
				if _hl == hl and not highlighter.trees[_buf] then
					; get lang for mirror buffer
					if lang then
						; check that parser is installed
						if parser_installed then
							highlighter.trees[_buf] = vim.treesitter.get_parser(_buf, lang)
						end
					end
				end
			end
		end

		break
	end
end

;; get lang for mirror buffer
local ft = vim.bo[_buf].ft
local lang
if ft then
	; convert filetype to lang
end
